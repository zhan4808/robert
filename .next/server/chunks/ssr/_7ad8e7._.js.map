{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/robertzhang/Documents/GitHub/portfolio-website/app/components/Navbar.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/components/Navbar.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/Navbar.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6R,GAC1T,2DACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/robertzhang/Documents/GitHub/portfolio-website/app/components/Navbar.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/components/Navbar.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/Navbar.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyQ,GACtS,uCACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/robertzhang/Documents/GitHub/portfolio-website/app/ThemeContext.tsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\n// Define the context type\ntype ThemeContextType = {\n  darkMode: boolean;\n  toggleDarkMode: () => void;\n};\n\n// Create the context\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\n// Provider component\nexport const ThemeProvider = ({ children }: { children: ReactNode }) => {\n  const [darkMode, setDarkMode] = useState(true); // Default to true for dark mode\n\n  useEffect(() => {\n    // Ensure the dark class is applied on the initial render if darkMode is true\n    if (darkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, [darkMode]);\n\n  const toggleDarkMode = () => {\n    setDarkMode((prev) => !prev);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ darkMode, toggleDarkMode }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\n// Hook to use the theme context\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};"],"names":[],"mappings":";;;;;AAAA;;;AAQA,qBAAqB;AACrB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAgC;AAG1D,MAAM,gBAAgB,CAAC,EAAE,QAAQ,EAA2B;IACjE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,gCAAgC;IAEhF,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,6EAA6E;QAC7E,IAAI,UAAU;YACZ,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;QACzC,OAAO;YACL,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC;QAC5C;IACF,GAAG;QAAC;KAAS;IAEb,MAAM,iBAAiB;QACrB,YAAY,CAAC,OAAS,CAAC;IACzB;IAEA,qBACE,8OAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAU;QAAe;kBACtD;;;;;;AAGP;AAGO,MAAM,WAAW;IACtB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///Users/robertzhang/Documents/GitHub/portfolio-website/app/layout.tsx"],"sourcesContent":["import './globals.css';\nimport { ReactNode } from 'react';\nimport Navbar from './components/Navbar';\nimport { ThemeProvider } from './ThemeContext';\n\nexport default function RootLayout({ children }: { children: ReactNode }) {\n  return (\n    <html lang=\"en\">\n      <body className=\"bg-white text-black dark:bg-black dark:text-white transition-colors duration-300\">\n        {/* Wrap the app with ThemeProvider */}\n        <ThemeProvider>\n          <Navbar />\n          <main>{children}</main>\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;;;;;AAEe,SAAS,WAAW,EAAE,QAAQ,EAA2B;IACtE,qBACE,8OAAC;QAAK,MAAK;kBACT,cAAA,8OAAC;YAAK,WAAU;sBAEd,cAAA,8OAAC,oHAAA,CAAA,gBAAa;;kCACZ,8OAAC,4HAAA,CAAA,UAAM;;;;;kCACP,8OAAC;kCAAM;;;;;;;;;;;;;;;;;;;;;;AAKjB"}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///Users/robertzhang/Documents/GitHub/portfolio-website/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-rsc'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0]}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}