{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///Users/robertzhang/Documents/GitHub/robert/app/api/blog/edit/route.ts"],"sourcesContent":["import { promises as fs } from 'fs';\nimport { NextRequest, NextResponse } from 'next/server';\nimport path from 'path';\n\nexport async function PUT(request: NextRequest) {\n  try {\n    // Parse the request body\n    const body = await request.json();\n    \n    // Validate required fields\n    if (!body.slug || !body.title || !body.description || !body.content) {\n      return NextResponse.json(\n        { error: 'Missing required fields' },\n        { status: 400 }\n      );\n    }\n    \n    const { slug, title, description, content, date, icon, song, songTitle, songArtist, songCover, colors } = body;\n    \n    // Check if the slug exists\n    const pagesDir = path.join(process.cwd(), 'app', 'blog');\n    try {\n      await fs.access(path.join(pagesDir, slug));\n    } catch (err) {\n      return NextResponse.json(\n        { error: `Blog post with slug \"${slug}\" does not exist` },\n        { status: 404 }\n      );\n    }\n    \n    // Create the blog post template\n    const blogPostTemplate = `'use client';\n\nimport { useState, useEffect, useRef } from 'react';\nimport { motion, useScroll, useTransform } from 'framer-motion';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport ImageIcon from '../../components/ImageIcon';\n\nexport default function ${title.replace(/\\s+/g, '')}Post() {\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [isLooping, setIsLooping] = useState(false);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const audioRef = useRef<HTMLAudioElement>(null);\n  \n  const { scrollYProgress } = useScroll({\n    target: containerRef,\n    offset: ['start start', 'end end']\n  });\n  \n  const titleOpacity = useTransform(scrollYProgress, [0, 0.1], [1, 0]);\n  const titleScale = useTransform(scrollYProgress, [0, 0.1], [1, 0.9]);\n  const titleY = useTransform(scrollYProgress, [0, 0.1], [0, -50]);\n  \n  useEffect(() => {\n    const handleMouseMove = (e: MouseEvent) => {\n      setMousePosition({ x: e.clientX, y: e.clientY });\n    };\n    \n    window.addEventListener('mousemove', handleMouseMove);\n    \n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, []);\n  \n  useEffect(() => {\n    const audio = audioRef.current;\n    if (!audio) return;\n    \n    const handleTimeUpdate = () => {\n      setCurrentTime(audio.currentTime);\n      setProgress((audio.currentTime / audio.duration) * 100);\n    };\n    \n    const handleLoadedMetadata = () => {\n      setDuration(audio.duration);\n    };\n    \n    const handleEnded = () => {\n      if (!isLooping) {\n        setIsPlaying(false);\n      }\n    };\n    \n    audio.addEventListener('timeupdate', handleTimeUpdate);\n    audio.addEventListener('loadedmetadata', handleLoadedMetadata);\n    audio.addEventListener('ended', handleEnded);\n    \n    return () => {\n      audio.removeEventListener('timeupdate', handleTimeUpdate);\n      audio.removeEventListener('loadedmetadata', handleLoadedMetadata);\n      audio.removeEventListener('ended', handleEnded);\n    };\n  }, [isLooping]);\n  \n  const togglePlayPause = () => {\n    const audio = audioRef.current;\n    if (!audio) return;\n    \n    if (isPlaying) {\n      audio.pause();\n    } else {\n      audio.play();\n    }\n    \n    setIsPlaying(!isPlaying);\n  };\n  \n  const toggleLoop = () => {\n    const audio = audioRef.current;\n    if (!audio) return;\n    \n    audio.loop = !isLooping;\n    setIsLooping(!isLooping);\n  };\n  \n  const handleProgressClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    const audio = audioRef.current;\n    if (!audio) return;\n    \n    const progressBar = e.currentTarget;\n    const rect = progressBar.getBoundingClientRect();\n    const percent = (e.clientX - rect.left) / rect.width;\n    \n    audio.currentTime = percent * audio.duration;\n  };\n  \n  const formatTime = (time: number) => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return \\`\\${minutes}:\\${seconds < 10 ? '0' : ''}\\${seconds}\\`;\n  };\n  \n  return (\n    <div ref={containerRef} className=\"relative min-h-screen bg-gradient-to-r from-${colors[0]}-400 via-${colors[1]}-300 to-${colors[2]}-300\">\n      <div className=\"relative min-h-screen bg-gradient-to-r from-${colors[2]}-300 via-${colors[3]}-400 to-${colors[4]}-300\">\n        <div className=\"relative min-h-screen bg-gradient-to-r from-${colors[4]}-300 via-${colors[5]}-300 to-${colors[0]}-400\">\n          <div \n            className=\"absolute w-full h-full opacity-70\"\n            style={{\n              backgroundImage: 'url(\"/noise.png\")',\n              backgroundRepeat: 'repeat',\n              mixBlendMode: 'overlay'\n            }}\n          />\n          \n          <audio ref={audioRef} src=\"${song}\" loop={isLooping} />\n          \n          <div className=\"fixed bottom-8 left-1/2 transform -translate-x-1/2 z-50 bg-white dark:bg-gray-800 rounded-full shadow-lg px-4 py-2 flex items-center space-x-4\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-10 h-10 relative rounded-full overflow-hidden\">\n                <Image\n                  src=\"${songCover}\"\n                  alt=\"${songTitle} cover\"\n                  fill\n                  className=\"object-cover\"\n                />\n              </div>\n              <div>\n                <p className=\"text-sm font-medium text-gray-900 dark:text-white\">${songTitle}</p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400\">${songArtist}</p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center space-x-2\">\n              <button\n                className=\"w-8 h-8 flex items-center justify-center rounded-full bg-indigo-100 dark:bg-indigo-900 text-indigo-600 dark:text-indigo-300\"\n                onClick={togglePlayPause}\n              >\n                {isPlaying ? (\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zM7 8a1 1 0 012 0v4a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v4a1 1 0 102 0V8a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                  </svg>\n                ) : (\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clipRule=\"evenodd\" />\n                  </svg>\n                )}\n              </button>\n              \n              <button\n                className={\\`w-8 h-8 flex items-center justify-center rounded-full \\${isLooping ? 'bg-indigo-100 dark:bg-indigo-900 text-indigo-600 dark:text-indigo-300' : 'bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300'}\\`}\n                onClick={toggleLoop}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.736 6.979C9.208 6.193 9.696 6 10 6c.304 0 .792.193 1.264.979a1 1 0 001.715-1.029C12.279 4.784 11.232 4 10 4s-2.279.784-2.979 1.95c-.285.475-.507 1-.635 1.55C6.015 9.235 6.5 10.5 7 12a.5.5 0 00.5.5h5a.5.5 0 000-1H7.864c-.258-.693-.496-1.342-.635-2.05a2.95 2.95 0 01.507-2.5z\" clipRule=\"evenodd\" />\n                </svg>\n              </button>\n            </div>\n            \n            <div className=\"flex-1 max-w-[200px]\">\n              <div className=\"relative w-full h-2 bg-gray-200 dark:bg-gray-700 rounded-full cursor-pointer\" onClick={handleProgressClick}>\n                <div\n                  className=\"absolute top-0 left-0 h-full bg-indigo-500 rounded-full\"\n                  style={{ width: \\`\\${progress}%\\` }}\n                />\n              </div>\n              <div className=\"flex justify-between mt-1 text-xs text-gray-500 dark:text-gray-400\">\n                <span>{formatTime(currentTime)}</span>\n                <span>{formatTime(duration)}</span>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 pt-20 pb-40\">\n            <div className=\"fixed top-6 left-6 z-50\">\n              <Link\n                href=\"/blog\"\n                className=\"text-white bg-black/20 hover:bg-black/30 backdrop-blur-sm rounded-full px-4 py-2 flex items-center transition-all\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\" clipRule=\"evenodd\" />\n                </svg>\n                back\n              </Link>\n            </div>\n            \n            <div className=\"fixed top-6 right-6 z-50\">\n              <div className=\"text-white bg-black/20 backdrop-blur-sm rounded-full px-3 py-1.5 text-sm\">\n                {new Date(\"${date}\").toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' })}\n              </div>\n            </div>\n            \n            <motion.div\n              className=\"relative max-w-3xl mx-auto text-center mb-20\"\n              style={{\n                opacity: titleOpacity,\n                scale: titleScale,\n                y: titleY\n              }}\n            >\n              <div className=\"mb-6 w-32 h-32 relative mx-auto\">\n                <ImageIcon src=\"${icon}\" borderGradient=\"true\" />\n              </div>\n              \n              <h1 className=\"text-5xl font-bold text-white mb-4\">${title}</h1>\n              <h2 className=\"text-2xl font-light text-white/80\">${description}</h2>\n            </motion.div>\n            \n            <div className=\"max-w-2xl mx-auto prose prose-lg dark:prose-invert prose-p:text-gray-200 prose-headings:text-white\">\n              ${content.split('\\n\\n').map((paragraph: string) => `<p>${paragraph}</p>`).join('\\n              ')}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}`;\n\n    // Write the page file\n    await fs.writeFile(\n      path.join(pagesDir, slug, 'page.tsx'),\n      blogPostTemplate\n    );\n\n    return NextResponse.json({ success: true });\n  } catch (error) {\n    console.error('Error updating blog post:', error);\n    return NextResponse.json(\n      { error: 'An unexpected error occurred' },\n      { status: 500 }\n    );\n  }\n} "],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,yBAAyB;QACzB,MAAM,OAAO,MAAM,QAAQ,IAAI;QAE/B,2BAA2B;QAC3B,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,WAAW,IAAI,CAAC,KAAK,OAAO,EAAE;YACnE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA0B,GACnC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG;QAE1G,2BAA2B;QAC3B,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO;QACjD,IAAI;YACF,MAAM,6FAAA,CAAA,WAAE,CAAC,MAAM,CAAC,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,UAAU;QACtC,EAAE,OAAO,KAAK;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO,CAAC,qBAAqB,EAAE,KAAK,gBAAgB,CAAC;YAAC,GACxD;gBAAE,QAAQ;YAAI;QAElB;QAEA,gCAAgC;QAChC,MAAM,mBAAmB,CAAC;;;;;;;;wBAQN,EAAE,MAAM,OAAO,CAAC,QAAQ,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mFAoG+B,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAE,CAAC;kEACtE,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAE,CAAC;oEACnD,EAAE,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAE,CAAC;;;;;;;;;;qCAUpF,EAAE,KAAK;;;;;;uBAMrB,EAAE,UAAU;uBACZ,EAAE,UAAU;;;;;;iFAM8C,EAAE,UAAU;wEACrB,EAAE,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2BA2D1D,EAAE,KAAK;;;;;;;;;;;;;gCAaF,EAAE,KAAK;;;iEAG0B,EAAE,MAAM;gEACT,EAAE,YAAY;;;;cAIhE,EAAE,QAAQ,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,YAAsB,CAAC,GAAG,EAAE,UAAU,IAAI,CAAC,EAAE,IAAI,CAAC,oBAAoB;;;;;;;CAOhH,CAAC;QAEE,sBAAsB;QACtB,MAAM,6FAAA,CAAA,WAAE,CAAC,SAAS,CAChB,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,UAAU,MAAM,aAC1B;QAGF,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK;IAC3C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA+B,GACxC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}